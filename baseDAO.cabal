cabal-version: 2.2

-- This file has been generated from package.yaml by hpack version 0.34.2.
--
-- see: https://github.com/sol/hpack

name:           baseDAO
version:        0.1.0.0
description:    Please see the README on GitHub at <https://github.com/tqtezos/baseDAO#readme>
author:         Serokell, Tocqueville Group
maintainer:     Serokell, Tocqueville Group
copyright:      2020 TQ Tezos
license:        MIT
license-file:   LICENSE
build-type:     Simple
extra-source-files:
    README.md

source-repository head
  type: git
  location: git@github.com:tqtezos/baseDAO.git

library
  exposed-modules:
      BaseDAO.CLI
      BaseDAO.ShareTest.Common
      BaseDAO.ShareTest.FA2
      BaseDAO.ShareTest.OffChainViews
      BaseDAO.ShareTest.Proposal
      BaseDAO.ShareTest.Proposal.Bounds
      BaseDAO.ShareTest.Proposal.Config
      BaseDAO.ShareTest.Proposal.Flush
      BaseDAO.ShareTest.Proposal.Proposal
      BaseDAO.ShareTest.Proposal.Vote
      BaseDAO.ShareTest.Token
      Lorentz.Contracts.BaseDAO
      Lorentz.Contracts.BaseDAO.Doc
      Lorentz.Contracts.BaseDAO.Management
      Lorentz.Contracts.BaseDAO.Permit
      Lorentz.Contracts.BaseDAO.Proposal
      Lorentz.Contracts.BaseDAO.Token
      Lorentz.Contracts.BaseDAO.Token.FA2
      Lorentz.Contracts.BaseDAO.Types
      Lorentz.Contracts.BaseDAO.TZIP16Metadata
      Lorentz.Contracts.GameDAO
      Lorentz.Contracts.RegistryDAO
      Lorentz.Contracts.RegistryDAO.Doc
      Lorentz.Contracts.RegistryDAO.Types
      Lorentz.Contracts.TreasuryDAO
      Lorentz.Contracts.TreasuryDAO.Doc
      Lorentz.Contracts.TreasuryDAO.Types
      Lorentz.Contracts.TrivialDAO
  other-modules:
      Paths_baseDAO
  autogen-modules:
      Paths_baseDAO
  hs-source-dirs:
      src
  default-extensions: AllowAmbiguousTypes BangPatterns BlockArguments ConstraintKinds DataKinds DefaultSignatures DeriveAnyClass DeriveDataTypeable DeriveFoldable DeriveFunctor DeriveGeneric DeriveTraversable DerivingStrategies DerivingVia EmptyCase ExistentialQuantification FlexibleContexts FlexibleInstances GADTs GeneralizedNewtypeDeriving LambdaCase MultiParamTypeClasses MultiWayIf NamedFieldPuns NegativeLiterals NoImplicitPrelude NumDecimals OverloadedLabels OverloadedStrings PatternSynonyms PolyKinds QuasiQuotes RankNTypes RecordWildCards RecursiveDo ScopedTypeVariables StandaloneDeriving StrictData TemplateHaskell TupleSections TypeApplications TypeFamilies TypeOperators UndecidableInstances UndecidableSuperClasses ViewPatterns RebindableSyntax
  ghc-options: -Weverything -Wno-missing-exported-signatures -Wno-missing-import-lists -Wno-missed-specialisations -Wno-all-missed-specialisations -Wno-unsafe -Wno-safe -Wno-missing-local-signatures -Wno-monomorphism-restriction -Wno-implicit-prelude -Wno-unused-do-bind
  build-depends:
      HUnit
    , aeson-pretty
    , base >=4.7 && <5
    , cleveland
    , containers
    , fmt
    , lens
    , lorentz
    , morley
    , morley-ledgers
    , morley-metadata
    , named
    , optparse-applicative
    , tasty
    , tasty-hunit-compat
    , universum
  default-language: Haskell2010

executable baseDAO
  main-is: Main.hs
  other-modules:
      Paths_baseDAO
  hs-source-dirs:
      app
  default-extensions: AllowAmbiguousTypes BangPatterns BlockArguments ConstraintKinds DataKinds DefaultSignatures DeriveAnyClass DeriveDataTypeable DeriveFoldable DeriveFunctor DeriveGeneric DeriveTraversable DerivingStrategies DerivingVia EmptyCase ExistentialQuantification FlexibleContexts FlexibleInstances GADTs GeneralizedNewtypeDeriving LambdaCase MultiParamTypeClasses MultiWayIf NamedFieldPuns NegativeLiterals NoImplicitPrelude NumDecimals OverloadedLabels OverloadedStrings PatternSynonyms PolyKinds QuasiQuotes RankNTypes RecordWildCards RecursiveDo ScopedTypeVariables StandaloneDeriving StrictData TemplateHaskell TupleSections TypeApplications TypeFamilies TypeOperators UndecidableInstances UndecidableSuperClasses ViewPatterns
  ghc-options: -Weverything -Wno-missing-exported-signatures -Wno-missing-import-lists -Wno-missed-specialisations -Wno-all-missed-specialisations -Wno-unsafe -Wno-safe -Wno-missing-local-signatures -Wno-monomorphism-restriction -Wno-implicit-prelude
  build-depends:
      base >=4.7 && <5
    , baseDAO
    , lorentz
    , morley
    , universum
  default-language: Haskell2010

test-suite baseDAO-test
  type: exitcode-stdio-1.0
  main-is: Main.hs
  other-modules:
      Test.BaseDAO.Doc
      Test.BaseDAO.Limits
      Test.BaseDAO.Management
      Test.BaseDAO.OffChainViews
      Test.BaseDAO.Proposal
      Test.BaseDAO.Token
      Test.BaseDAO.Token.FA2
      Test.Common
      Test.GameDAO
      Test.Integrational.Common
      Test.Integrational.RegistryDAO
      Test.RegistryDAO
      Test.TreasuryDAO
      Paths_baseDAO
  hs-source-dirs:
      test
  default-extensions: AllowAmbiguousTypes BangPatterns BlockArguments ConstraintKinds DataKinds DefaultSignatures DeriveAnyClass DeriveDataTypeable DeriveFoldable DeriveFunctor DeriveGeneric DeriveTraversable DerivingStrategies DerivingVia EmptyCase ExistentialQuantification FlexibleContexts FlexibleInstances GADTs GeneralizedNewtypeDeriving LambdaCase MultiParamTypeClasses MultiWayIf NamedFieldPuns NegativeLiterals NoImplicitPrelude NumDecimals OverloadedLabels OverloadedStrings PatternSynonyms PolyKinds QuasiQuotes RankNTypes RecordWildCards RecursiveDo ScopedTypeVariables StandaloneDeriving StrictData TemplateHaskell TupleSections TypeApplications TypeFamilies TypeOperators UndecidableInstances UndecidableSuperClasses ViewPatterns
  ghc-options: -Weverything -Wno-missing-exported-signatures -Wno-missing-import-lists -Wno-missed-specialisations -Wno-all-missed-specialisations -Wno-unsafe -Wno-safe -Wno-missing-local-signatures -Wno-monomorphism-restriction -Wno-implicit-prelude -threaded -eventlog "-with-rtsopts=-N -A64m -AL256m"
  build-tool-depends:
      tasty-discover:tasty-discover
  build-depends:
      HUnit
    , base >=4.7 && <5
    , baseDAO
    , cleveland
    , containers
    , fmt
    , lorentz
    , morley
    , morley-ledgers
    , named
    , o-clock
    , tasty
    , tasty-hunit-compat
    , universum
  default-language: Haskell2010
